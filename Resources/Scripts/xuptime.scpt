-- Updated script update bit to 2.0.1-- Turned off autoupdatecheck by default-- Added script's name to the various different update results.-- Changed way that the plural of minutes is calculated.--Debug command.--set cmd to ""on textualcmd(cmd)		-- Defines current version of the script.	set currentversion to "1.1.2"		-- Defines formatting. (Simple is not used since the formatting is only used for /echo's)	set FBlack to (ASCII character 3) & "01"	set FNBblue to (ASCII character 3) & "02"	set FGreen to (ASCII character 3) & "03"	set FRed to (ASCII character 3) & "04"	set FBrown to (ASCII character 3) & "05"	set FPurple to (ASCII character 3) & "06"	set FOrange to (ASCII character 3) & "07"	set FYellow to (ASCII character 3) & "08"	set FLGreen to (ASCII character 3) & "09"	set FTeal to (ASCII character 3) & "10"	set FCyan to (ASCII character 3) & "11"	set FBlue to (ASCII character 3) & "12"	set FPink to (ASCII character 3) & "13"	set FGrey to (ASCII character 3) & "14"	set FLGrey to (ASCII character 3) & "15"	set FNull to ASCII character 0	set FWhite to ASCII character 3	set FBold to ASCII character 2	set FItalic to ASCII character 1	set nl to ASCII character 10		-- This regards if the script should warn the user about an available update at runtime.	try		set autocheckupdate to do shell script "defaults read xeon3d.xuptime autocheckupdate"	on error		try			do shell script ("defaults write xeon3d.xuptime autocheckupdate False")			set autocheckupdate to "False"		on error			set msg to "/echo There was an error with the noautocheck variable"			return msg		end try	end try		if cmd is "version" then		if currentversion contains "beta" then			set msg to "Script Version: XUptime " & currentversion & " for Textual - Ask Xeon3D (irc.wyldryde.org#textual) for a copy if you want it!"		else			set msg to "Script Version: XUptime " & currentversion & " for Textual - Get it @ http://xuptime.xeon3d.net"		end if		return msg	end if		-- Update Engine 2.1		if cmd is "update" then		set LatestVersionMD5 to do shell script "curl http://www.xeon3d.net/xuptime/files/textual/latestmd5"		set latestversion to do shell script "curl http://www.xeon3d.net/xuptime/files/textual/latestversion"		set LatestVersionURL to "http://www.xeon3d.net/xuptime/files/textual/xuptime" & latestversion & ".zip"		set aspath to path to application support from user domain		set aspath to POSIX path of aspath & "Textual/Scripts/"		set aspath to "'" & aspath		if latestversion contains "DOCTYPE" then			return "/echo Error updating. Please try again later or download newest version here: http://xuptime.xeon3d.net " & nl & "/echo Cannot access the LatestVersion file."		end if				if latestversion is greater than currentversion then			set the DestinationFile to aspath & "update.zip'"			do shell script "rm -f " & DestinationFile			set DownloadNewVersion to do shell script "curl -C - " & LatestVersionURL & " -o " & DestinationFile			--debug output *do not uncomment*			--return "md5 -q '" & POSIX path of application support			if LatestVersionMD5 is not (do shell script "md5 -q " & DestinationFile) then				if LatestVersionMD5 contains "DOCTYPE" then					return "/echo Error updating. Please try again later or download newest version here: http://xuptime.xeon3d.net " & nl & "/echo Cannot access the LatestVersionMD5 file."				end if				return "/echo Error updating. Please try again later or download newest version here: http://xuptime.xeon3d.net " & nl & "/echo Online MD5: " & LatestVersionMD5 & nl & "/echo Local MD5: " & (do shell script "md5 -q " & DestinationFile)			end if			set InstallUpdateResult to do shell script "unzip -o " & DestinationFile & " -d " & aspath & "'"			-- Debug command!			-- return InstallUpdateResult			if InstallUpdateResult contains "inflating:" then				set ResultMessage to "/echo Successefully updated XUptime to version " & latestversion & " from " & currentversion & "." & nl & "/echo Changelog: http://xuptime.xeon3d.net/files/textual/Changelog"				return ResultMessage			else if InstallUpdateResult contains "cannot" then				set ResultMessage to "/echo Error updating. Please try again later"				return ResultMessage			end if		else if latestversion is equal to currentversion then			set ResultMessage to "/echo XUptime is already up to date. (Your script version: " & currentversion & "; Latest released script version: " & latestversion & ")"			return ResultMessage		else if currentversion is greater than latestversion then			set ResultMessage to "/echo Your copy of XUptime is newer than the last released version. (Your script version: " & currentversion & "; Latest released script version: " & latestversion & ")"			return ResultMessage		end if	end if		if cmd is "autocheckupdate" then		if autocheckupdate is "True" then			set msg to "/echo The script will " & FBold & "check" & FBold & " for updates at runtime. To change this type '/xuptime autocheckupdate toggle'"			return msg		else if autocheckupdate is "False" then			set msg to "/echo The script will " & FBold & "not check" & FBold & " for updates at runtime. To change this type '/xuptime autocheckupdate toggle'"			return msg		else			return "yaddah"		end if	end if		if cmd is "autocheckupdate toggle" then		if autocheckupdate is "True" then			do shell script "defaults write xeon3d.xuptime autocheckupdate False"			return "/echo The script " & FBold & "will not check" & FBold & " for updates at runtime."		else if autocheckupdate is "False" then			do shell script "defaults write xeon3d.xuptime autocheckupdate True"			return "/echo The script " & FBold & "will check" & FBold & " for updates at runtime."		end if	end if		if cmd is "about" then		set helpmsg to "/echo XUptime " & currentversion & " - A Uptime Script for the Textual IRC Client" & nl & ¬			"/echo Homepage: http://xuptime.xeon3d.net / http://www.xeon3d.net" & nl & ¬			"/echo Coded by Xeon3D (Marcos Alves) - xeon3d@xeon3d.net - Xeon3D @ irc://irc.wyldryde.org/#textual" & nl & ¬			"/echo Some fixes by Aang / ePirat - Aang or ePirat @ irc://irc.wyldryde.org/#textual" & nl & ¬			"/echo Many thanks to Mikey @ irc://irc.wyldryde.org/#textual for the idea."		return helpmsg	end if		if cmd is "help" then		set helpmsg to "/echo " & FBold & "Usage:" & FBold & " /xuptime <option>" & nl & ¬			"/echo Doesn't use any arguments for normal functioning. It shows the current uptime and the record uptime." & nl & ¬			"/echo If the current uptime is longer than the record one, it defines it as the new record uptime and tells the user what was the old one." & nl & ¬			"/echo Possible <options>:" & nl & ¬			"/echo update - Updates the script to the latest released version. " & nl & ¬			"/echo about - Shows some information about the script." & nl & ¬			"/echo autocheckupdate <toggle> - Shows the current status of the automatic checking for updates at runtime and if toggle is used, erm... toggles it."		return helpmsg	end if		if cmd is "options" then		set helpmsg to "/echo Possible options:" & nl & ¬			"/echo update - Updates the script to the latest released version. " & nl & ¬			"/echo about - Shows some information about the script." & nl & ¬			"/echo autocheckupdate <toggle> - Shows the current status of the automatic checking for updates at runtime and if toggle is used, erm... toggles it. Current Status: " & FBold & FRed & autocheckupdate		return helpmsg	end if		set msg to ""		set latestversion to do shell script "curl http://www.xeon3d.net/xuptime/files/textual/latestversion"	--Debug command	--set latestversion to "1.0.1"	if autocheckupdate is "True" then		if latestversion is greater than currentversion then			set msg to "/echo Info: XUptime " & FBold & latestversion & FBold & " has been released. You're currently running XUptime " & FBold & currentversion & FBold & "." & nl & "/echo To update to the latest version type '/xuptime update' (without the quotes). To disable this check type '/xuptime autocheckupdate toggle'." & nl & msg		end if	end if		--debug command	--set upresult to "20:53  up 4:47, 2 users, load averages: 0.18 0.16 0.24"		set upresult to do shell script "uptime"		if upresult contains "day" and upresult contains "min" then -- if uptime result has days and minutes only		set cuptimed to do shell script "uptime | awk {'print $3'}" as string		set cuptimedinm to ((cuptimed * 24) * 60) as string		set cuptimeh to "0" as string		set cuptimem to do shell script "uptime | awk {'print $5'}" as string		set cuptimetm to cuptimedinm + cuptimem as string	else if upresult contains "day" then -- if uptime result has days, hours and mins		set cuptimed to do shell script "uptime | awk {'print $3'}" as string		set cuptimedinm to ((cuptimed * 24) * 60) as string		set cuptimehm to do shell script "uptime | awk {'print $5'}"		set AppleScript's text item delimiters to ","		set cuptimehm to first text item of cuptimehm		set AppleScript's text item delimiters to ":"		set cuptimeh to first text item of cuptimehm as string		set cuptimem to second text item of cuptimehm as string		set cuptimehinm to (cuptimeh * 60) as string		set cuptimetm to cuptimedinm + cuptimehinm + cuptimem as string	else if upresult contains "mins" then -- if uptime result has only minutes		-- debug command		--set cuptimehm to do shell script "cat /tmp/testup | awk {'print $3'}"		set cuptimed to "0" as string		set cuptimeh to "0" as string		--debug command		--set cuptimetm to do shell script "cat /tmp/tu | awk {'print $3'}"		set cuptimetm to do shell script "uptime | awk {'print $3'}" as string		set cuptimem to cuptimetm as string	else if upresult contains ":" then -- if uptime result has hours and minutes		--set cuptimehm to do shell script "cat /tmp/testup | awk {'print $3'}"		set cuptimehm to do shell script "uptime | awk {'print $3'}"		set cuptimed to "0" as string		set AppleScript's text item delimiters to ","		set cuptimehm to first text item of cuptimehm		set AppleScript's text item delimiters to ":"		set cuptimeh to first text item of cuptimehm as string		set cuptimem to second text item of cuptimehm as string		set cuptimehinm to (cuptimeh * 60) as string		set cuptimetm to cuptimehinm + cuptimem as string	end if		-- reads the record uptime from defaults read xeon3d.xuptime	try		set ruptimetm to do shell script "defaults read xeon3d.xuptime recuptime"	on error		try			do shell script ("defaults write xeon3d.xuptime recuptime " & cuptimetm)			set ruptimetm to cuptimetm as string		on error			set msg to "/echo There was an error with the recuptime variable"			return msg		end try	end try		--debug command	--set ruptimetm to "1501" as string		-- This bit is to convert the nr of minutes of the record uptime to days, hours and mins	set ruptimeinh to (ruptimetm div 60) as string -- Amount of hours total 	set ruptimed to (ruptimeinh div 24) as string -- calculates days from nr of hours 	set ruptimeh to (ruptimeinh - (ruptimed * 24)) as string -- converts final days value to hours, removes that value from total nr of hours to get rest nr of hours 24 - 1*24 - 1hora	set ruptimem to (ruptimetm - (((ruptimed * 24) * 60) + (ruptimeh * 60))) as string -- converts days and hours into minutes and subtracts nr of minutes of total nr of minutes to get rest nr of minutes		-- This sets the plurals for day, minute and hour if needed	if cuptimed is "1" then		set cupdaysplural to " day"	else if cuptimed is "0" then		set cupdaysplural to " "	else		set cupdaysplural to " days"	end if		if ruptimed is "1" then		set rupdaysplural to " day"	else if ruptimed is "0" then		set rupdaysplural to " "	else		set rupdaysplural to " days"	end if		if cuptimeh is "1" then		set cuphoursplural to " hour"	else if cuptimeh is "0" then		set cuphoursplural to " "	else		set cuphoursplural to " hours"	end if		if ruptimeh is "1" then		set ruphoursplural to " hour"	else if ruptimeh is "0" then		set ruphoursplural to " "	else		set ruphoursplural to " hours"	end if		if cuptimem is "1" then		set cupminutesplural to " minute"	else if cuptimem is "0" then		set cupminutesplural to ""	else if cuptimem is not "1" or cuptimem is not "0" then		set cupminutesplural to " minutes"	end if		if ruptimem is "1" then		set rupminutesplural to " minute"	else if ruptimem is "0" then		set rupminutesplural to ""	else		set rupminutesplural to " minutes"	end if		if cuptimed is greater than "0" and cuptimeh is equal to "0" and cuptimem is greater than "0" then -- if output only has days and minutes		set cuptimetext to cuptimed & cupdaysplural & " and " & cuptimem & cupminutesplural & "."	else if cuptimed is equal to "0" and cuptimeh is equal to "0" then -- if output only has minutes		set cuptimetext to cuptimem & cupminutesplural & "."	else if cuptimed is greater than "0" then -- IF output has day, hours and minutes		set cuptimetext to cuptimed & cupdaysplural & ", " & cuptimeh & cuphoursplural & " and " & cuptimem & cupminutesplural & "."	else -- if output has hours and minutes		set cuptimetext to cuptimeh & cuphoursplural & " and " & cuptimem & cupminutesplural & "."	end if		if ruptimed is greater than "0" and ruptimeh is equal to "0" and ruptimem is greater than "0" then -- if output only has days and minutes		set ruptimetext to ruptimed & rupdaysplural & ruptimem & rupminutesplural & "."	else if ruptimed is equal to "0" and ruptimeh is equal to "0" then -- if output only has minutes		set ruptimetext to ruptimem & rupminutesplural & "."	else if ruptimed is greater than "0" then -- IF output has day, hours and minutes		set ruptimetext to ruptimed & rupdaysplural & ", " & ruptimeh & ruphoursplural & " and " & ruptimem & rupminutesplural & "."	else -- if output has hours and minutes		set ruptimetext to ruptimeh & ruphoursplural & " and " & ruptimem & rupminutesplural & "."	end if		set ruptimetm to ruptimetm as integer	set cuptimetm to cuptimetm as integer		if ruptimetm is less than cuptimetm then -- if record was broken		try			do shell script "defaults write xeon3d.xuptime recuptime " & cuptimetm		on error			return "/echo The record was broken but I was unable to save it! :("		end try		set msg to msg & "Current uptime: " & cuptimetext & " [New Record!]"		return msg	else if ruptimetm is greater than cuptimetm then -- if record is longer than current uptime		set msg to msg & "Current uptime: " & cuptimetext & " Record Uptime: " & ruptimetext		return msg	else -- if they're the same		set msg to msg & "Current uptime: " & cuptimetext & " [Current Record]"		return msg	end if	end textualcmd